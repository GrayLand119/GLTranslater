[MUSIC] When you walk into the back entrance
of Boelter Hall on the UCLA campus, you may notice a seemingly random
pattern of floor tiles on the entrance. If you spend a little time
looking at the pattern, it might dawn on you that the tiles
represent zeros and ones and then you might even figure out that
the tiles represent as ASCII characters. The characters in the floor
tiles spell out low and behold. To commemorate the building where L and O,
where the first two packets ever sent on the ARPANET from UCLA to Stanford Research
Institute, on October 29th, 1969. [MUSIC] >> ARPA wanted a network so that they
could share the large computing resources they had given to their
researchers across the country. University of Utah had a terrific
graphics operating system, SOI database, we had simulations. University of Illinois had
high-performance computing. And every time ARPA brought
on a new researcher, they'd offer to buy him a computer,
fine, but the researcher would say, I want the same capability
all those other guys have. I want the graphics,
the database, and all of that. And ARPA said, we can't afford that. If you want to do graphics, you log onto the machine at Utah, to a
network that we think we're going to make. So, the need for the network
was to do resource sharing, and not to protect the United States
against a nuclear holocaust. When Bob Taylor came in as net director,
and he recognized this need for sharing resources, by the way,
notice the phrase I'm using, sharing resources is exactly what
I built into the network design. Now they want it to share
the external resources. Same idea, you have it, you're not using
it, somebody else should be able to. So they brought in Larry Roberts,
another classmate of mine, in fact, an officer of mine at MIT
to manage this project. He came to me, because he knew my work. He watched me do the simulation. In fact, I used his compiler
on the TX2 computer and said, Len we need to know if this
thing's going to work. He knew that I had a theory, so
I could show it to him it's going to work. In fact, he even says he would never have
decided to spend millions of dollars of the US Government's money. It wasn't sure this thing would work. So the design began to be laid
out by a few of us in 1967, in 68 they sent out a request for
proposal. The end of 68, Bolt, Beranek and
Newman, a Cambridge, Massachusetts firm won the contract to
produce the first switch of the opener. And we became the network measurement
center early on so we could test it out. During the design phase, some great people
were there throwing their ideas out. Herb Baskin was there,
a timesharing expert. And he said, if this network can't deliver
short messages within a half a second, I can't use it for timesharing. [NOISE] Specification. Half a second. By the way we got 200 milliseconds. [LAUGH] And Westclock said, separate computer from communications. I said,
look if this is going to be an experiment. And I also was interested in
the research and the experimentation. We have to build to build software in so
we can run experiments. Artificial traffic generators,
measurement hooks, a place where the measurements can
be evaluated, put that software in. So how we find,
begin to talk about network reliability. If anything fails,
the network shouldn't collapse. So, we didn't say these should
be five nines of uptime. We want much more pragmatic, we said if any single thing fails,
everybody else can still talk. So to do that you need something
called a two connector topology, two independent pairs between
every pair of nodes, built it in. So all those specs went to BBN,
they built the darn thing, they delivered the switch here at UCLA,
on schedule. Eight months after they got the contract,
they were to deliver this new technology, new applications, new device. They did it on time, on budget. It came here, we plugged it in,
and bits began to move and forth between our timeshared machine. And that switch on the day after
Labor Day, September 2nd, 1969. But that was just a one-node
network [COUGH] Schedule was that another one of these switches would be
delivered at Stanford Research Institute, 400 miles to the north, and
they would connect that to their machine. And that happened in October, so
in October we had a two node network. My machine, my switch, another switch
400 miles away, and the SRI host. And it wasn't one single line. It was a gang of 4.8
kilo per second lines. So we had to gang them together,
patched it up. So, first piece of the backbone internet. So, now what do you do? You have a two node network. So, now you can do something. So we decided, one night. One night late in October. Programmer, Charlie Klein and I. Let's communicate between
these two machines. So we got a hold of Bill Duvall,
they program there and we said, let's simply log in from a terminal
connected to our host, to that machine. The idea is,
these are both timesharing system. They expect terminals to connect in,
and use the services of the machine. The big thing was sit at a terminal here,
log onto your machine here, and through this wonderful network,
log on here as if you're a local user. That's easy enough. So, we got all set, got Charlie
down at the terminal over here, and just to be sure this worked,
we had a telephone handset. In fact, I think I've actually got the,
here it is. [LAUGH] Just happen to have it. >> That's the telephone handset? >> That was the telephone. We plugged it in. We derived a-
>> Were you using and Skype? >> Afraid not. [LAUGH] Plugged it in. We used a piece of the high-speed line for
the phone connection. But the interesting thing is,
we were using the defunct circuit switching technology to prove out
the new packet switching technology, and it really helped us, til we get answer. So, Charlie typed the L,
he said, you get the L? Bill said, yep, got the L. Typed the L, you got the L? We're trying to do L O G, for login. Get the O? Got the O. Typed the G, get the G, crash! So, the first message ever on the network
was low, as in low and behold. Now, that's especially interesting
because if you go outside this hallway, here down under the alley, you come into
another entrance to this building, and I just discovered this about a week ago. You walk on a platform. And there's a mosaic of tiles down there. And they're a strange pattern. It turns out it's the ASCII code for
lo and behold. I have no idea who did that. It's about a year and a half now,
some very clever person put that in. That was the first message October 29th,
1969 at 10:30 at night. [SOUND] You're entering 1969 right now, we're reproducing this
room to look as it did and smell and feel like it did,
some forty odd years ago. As you look over here, you're looking at the first piece
of equipment ever on the internet. This is that first interface message
processor, IMP number one, UCLA. A Honeywell mini computer,
adapted by Bolt, Beranek, and Newman, BBN. To operate has a switch to
channel the functionality. This is the same physical
four square feet, where it served as the opening
note of the Internet. The first piece of equipment
ever on the Internet. >> And that's the actual one? >> That's it. I kept it for years,
they tried to throw it away many times. Most of the people had aim to toss it. There's just the one or
two left of them in the world. But this is number one. This is the first piece. If you open this machine,
you'll be privileged to smell it. >> Yeah. >> It's got an unusual odor. It just brings you right back. >> Yeah. >> Emotionally, it's great. Can't smell it today. This is a military hardware machine,
this machine was essentially state of the art mini computer,
which was adapted by BBN and I first saw it in 1968 at one of
the joint computer conference shows. Thousands of people on
a big exhibit floor. And you see this sky hicks up here? They had one of these
machines hanging from the ceiling swinging in the air running. And there was a guy, big guy, stripped to the waste,
oiled skin, with a sledgehammer. And he was going whack,
whack to show that it was military. >> He was military [LAUGH]
>> And it was. But the most important
document of the internet, most important document of
the entire internet is right here. You took who was working with me,
well one of my software programmers was John Postel, and here's his picture and
he was not a hippie, even though he appears to be. He was the one who basically disciplined
my staff to do things properly and keep records. He said we have to keep
a record of what's going on. So the beginning of October,
basically a month after the IMP arrived, we started keeping an IMP LOG, and
this is an engineers LOG this is not Madison Avenue these are document
just scraped the old STS log. And here we kept directed
on what's going on. And then the most important
entry happened to be right here, on October 29, 1969 at 10:30 at night,
Charlie Klein the programmer was in the room with me, made this entry,
talked to SRI, host to host. This is the only record of the very first
message ever on the internet, right here. [NOISE] We had the technology,
we started making measurements, we were the first experimental known. So, we saw things happening, how come
we have a 50 kilobit per second line. The routing procedure either goes
one way or the other, one at a time. So how can you get more than 50
kilobits per second, between two nodes? If there's only one path at any time? And we say, it's obvious. That path is on now, when it gets backed
up, you change paths to this guy's empty and it's pack backup while you
send in this way make close to 100%. >> Right. >> So think but we could very do well, as
I said and every time we did, we would BBN and say fix it, we did this, fix it,
because they wouldn't give us the code. They kept it proprietary until opted said,
we paid for that code, you have to open it. They did. We saw it. Every time we got it and it would
take them six months to fix anything. >> Right. >> We discover a fault,
this time we had the code. We showed them how to fix it,
still took six months. One of the things I was very much
interested in in the design was distribute the control, why? >> Right. When I was a student of Chad,
and Chad is great working when he had a lot of things
interacting, long codewords, for example. That's when these,
emerging properties arise. So I said,
I want to design large networks. Design a large network,
you can't have a single point to control. You have to distribute it. >> Right.
>> So, what does he mean to distribute control? You're delegating
authority to all the peers. When office started funding
principle investigators they had the same philosophy. Say look, you're a smart guy, here's
some money, go do the thing you do best. We're not going to sit on top of you. Make good things happen. So here we are. I'm a recipient kind of money. What do I do, then? I've got my graduate students. They're brilliant kids. Look, we need to host
those protocols here. I'm going to say on top of you. I'm going to run with it. That is not a product mentality. That is a research and development
to create and it worked so well. [MUSIC]